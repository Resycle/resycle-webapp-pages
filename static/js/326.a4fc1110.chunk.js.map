{"version":3,"file":"static/js/326.a4fc1110.chunk.js","mappings":"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","sources":["components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LeftContentSection = styled('section')`\n  position: relative;\n  padding: 10rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled('p')`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const ContentWrapper = styled('div')`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled('h6')`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  font-family: 'Motiva Sans Light', sans-serif;\n`;\n\nexport const MinPara = styled('p')`\n  font-size: 13px;\n`;\n","import { Row, Col } from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport { SvgIcon } from '../../../common/SvgIcon';\nimport { ContentBlockProps } from '../types';\nimport { Fade } from 'react-awesome-reveal';\nimport {\n  LeftContentSection,\n  Content,\n  ContentWrapper,\n  ServiceWrapper,\n  MinTitle,\n  MinPara,\n} from './styles';\n\nconst LeftContentBlock = ({\n  icon,\n  title,\n  content,\n  section,\n  t,\n  id,\n  scrollId,\n}: ContentBlockProps) => {\n  return (\n    <LeftContentSection>\n      <Fade triggerOnce>\n        <Row justify='space-between' align='middle' id={id}>\n          <Col lg={11} md={11} sm={12} xs={24}>\n            <SvgIcon src={icon} width='100%' height='100%' />\n          </Col>\n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h6>{t(title)}</h6>\n              <Content>{t(content)}</Content>\n              <ServiceWrapper>\n                <Row justify='space-between'>\n                  {typeof section === 'object' &&\n                    section.map((item: any, id: number) => {\n                      return (\n                        <Col key={id} span={11}>\n                          <SvgIcon src={item.icon} width='60px' height='60px' />\n                          <MinTitle>{t(item.title)}</MinTitle>\n                          <MinPara>{t(item.content)}</MinPara>\n                        </Col>\n                      );\n                    })}\n                </Row>\n              </ServiceWrapper>\n            </ContentWrapper>\n          </Col>\n        </Row>\n      </Fade>\n    </LeftContentSection>\n  );\n};\n\nexport default withTranslation()(LeftContentBlock);\n","import styled from \"styled-components\";\n\nexport const RightBlockContainer = styled(\"section\")`\n  position: relative;\n  padding: 10rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 8rem 0 6rem;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 4rem 0 3rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-bottom: 4rem;\n  }\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 20px;\n  }\n`;\n","import { Row, Col } from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport { SvgIcon } from '../../../common/SvgIcon';\nimport { Button } from '../../../common/Button';\nimport { ContentBlockProps } from '../types';\nimport {\n  Fade,\n  Hinge,\n  JackInTheBox,\n  Zoom,\n  Bounce,\n  Flip,\n  AttentionSeeker,\n} from 'react-awesome-reveal';\nimport {\n  RightBlockContainer,\n  Content,\n  ContentWrapper,\n  ButtonWrapper,\n} from './styles';\nimport { useHistory } from 'react-router-dom';\n\nconst RightBlock = ({\n  title,\n  content,\n  button,\n  icon,\n  t,\n  id,\n  scrollId,\n}: ContentBlockProps) => {\n  const scrollTo = (id: string) => {\n    const element = document.getElementById(id) as HTMLDivElement;\n    element.scrollIntoView({\n      behavior: 'smooth',\n    });\n  };\n  const history = useHistory();\n\n  return (\n    <RightBlockContainer>\n      <Row justify='space-between' align='middle' id={id}>\n        <Col lg={11} md={11} sm={11} xs={24}>\n          <ContentWrapper>\n            <h6>{t(title)}</h6>\n            <Content>{t(content)}</Content>\n            <ButtonWrapper>\n              {typeof button === 'object' &&\n                button.map((item: any, id: number) => {\n                  return (\n                    <Button\n                      key={id}\n                      color={item.color}\n                      fixedWidth={true}\n                      onClick={() =>\n                        // scrollTo(\n                        //   typeof scrollId !== 'undefined' ? scrollId : 'about'\n                        // )\n                        // (window.location.href = '/calculator')\n                        history.push('/calculator')\n                      }\n                    >\n                      {t(item.title)}\n                    </Button>\n                  );\n                })}\n            </ButtonWrapper>\n          </ContentWrapper>\n        </Col>\n\n        <Col lg={11} md={11} sm={12} xs={24}>\n          <Fade>\n            <SvgIcon src={icon} width='100%' height='100%' />\n          </Fade>\n        </Col>\n      </Row>\n    </RightBlockContainer>\n  );\n};\n\nexport default withTranslation()(RightBlock);\n","import LeftContentBlock from \"./LeftContentBlock\";\nimport RightContentBlock from \"./RightContentBlock\";\nimport { ContentBlockProps } from \"./types\";\n\nconst ContentBlock = (props: ContentBlockProps) => {\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\n  return null;\n};\n\nexport default ContentBlock;\n"],"names":["LeftContentSection","styled","Content","ContentWrapper","ServiceWrapper","MinTitle","MinPara","withTranslation","icon","title","content","section","t","id","scrollId","triggerOnce","justify","align","lg","md","sm","xs","SvgIcon","src","width","height","map","item","span","RightBlockContainer","ButtonWrapper","button","history","useHistory","Button","color","fixedWidth","onClick","push","props","type","RightContentBlock"],"sourceRoot":""}